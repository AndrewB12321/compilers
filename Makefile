
# The top level rule indicates how to link everything together into calc

parse: main.o scanner.o parser.o decl.o expr.o stmt.o type.o param_list.o  hash_table.o stack.o symbol.o codegen.o
	gcc main.o scanner.o parser.o decl.o expr.o stmt.o type.o param_list.o  hash_table.o stack.o symbol.o codegen.o -o parse -lm

# This pattern indicates that any .o file depends
# upon the .c file of the same name, and all of the .h files.
# So, if a .o file is needed, it is built automatically.

%.o: %.c *.h
	gcc -Wall -g -c $< -o $@

# Only the files generated by flex and bison need explicit rules.

scanner.c: bminor.flex parser.h
	flex -oscanner.c bminor.flex

parser.c parser.h: bminor.bison
	bison --defines=parser.h --output=parser.c -v bminor.bison

# clean causes all intermediate files to be deleted.

clean:
	rm -f parser.* parser.output scanner.c *.o parse